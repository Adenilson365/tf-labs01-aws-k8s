name: pr-submit
on:
  pull_request:
    branches:
      - main
      - dev
env:
  context: ${{ github.event_name == 'pull_request' && github.base_ref || github.ref_name }}
jobs:
    tf_plan:
        uses: Adenilson365/tf-labs01-aws-k8s/.github/workflows/terraform-plan.yml@main
        secrets: inherit
        with: 
          conext: ${{ github.event_name == 'pull_request' && github.base_ref || github.ref_name }}
    pr_submit:
        needs: tf_plan
        runs-on: ubuntu-latest
        permissions:
          pull-requests: write
          issues: write
        steps:
            - name: Checkout Reposit√≥rio
              uses: actions/checkout@v4
            
            - name: Download Plan
              uses: actions/download-artifact@v4
              with:
                name: tfplan-${{ env.context == 'main' && 'prod' || env.context == 'dev' && 'dev' || 'feat' }}
            
            - name: Verificar Plan
              run: cat plan.txt 

            - name: Resumo do Plano
              run: |
                echo "Resumo do plano"
                cat plan.txt | grep "Plan:" || exit 0
                echo "===================================================================================================="
                echo "Recursos a serem destru√≠dos"  
                cat plan.txt | grep "will be destroyed" || echo "Nenhum recurso ser√° destru√≠do"
                echo "===================================================================================================="
                echo "Recursos a serem modificados"
                cat plan.txt | grep "will be changed" || echo "Nenhum recurso ser√° alterado"
                echo "===================================================================================================="
                echo "Recursos a serem criados"
                cat plan.txt | grep "will be created" || echo "Nenhum recurso ser√° criado"

            - name: Comentar PR
              uses: actions/github-script@v7
              with:
                script: |
                    const { execSync } = require('child_process');

                    function runCommand(command) {
                      try {
                        const output = execSync(command, { encoding: 'utf-8' }).trim();
                        return output
                          ? output.split("\n").map(line => `<p>${line.split("will be")[0]}</p>`)
                          : "<p>Nenhum recurso ser√° afetado</p>";
                      } catch {
                        return "<p>Nenhum recurso ser√° afetado</p>";
                      }
                    }

                    const planDetails = runCommand('cat plan.txt | grep "Plan:"') || "N√£o afeta";
                    const rds = runCommand('cat plan.txt | grep "module.rds"')
                    const destroyResources = runCommand('cat plan.txt | grep "will be destroyed"') || "Nenhum recurso ser√° destru√≠do";
                    const modifyResources = runCommand('cat plan.txt | grep "will be changed"') || "Nenhum recurso ser√° alterado";
                    const createResources = runCommand('cat plan.txt | grep "will be created"') || "Nenhum recurso ser√° criado";


                    const commentBody = `Resumo:\n
                    <h1>${planDetails}</h1><br>
                    <p1>Detalhes do plano no artefato dispon√≠vel para download</p1>
                    "=====================================================================================";
                    <h1>üõë[CUIDADO]-Essa feature afeta banco de dados:</h1>
                    ${rds}
                    "=====================================================================================";
                    <h1> üö´ Recursos a serem destru√≠dos</h1><br>
                    ${destroyResources}
                    "=====================================================================================";
                    <h1> ‚ö†Ô∏è Recursos a serem modificados</h1><br>
                    ${modifyResources}
                    "=====================================================================================";
                    <h1> ‚úÖ Recursos a serem criados</h1><br>
                    ${createResources}`;

                    github.rest.issues.createComment({
                      issue_number: context.issue.number,
                      owner: context.repo.owner,
                      repo: context.repo.repo,
                      body: commentBody
                    });
          


    