name: Terraform Plan
on:
  workflow_call:
    inputs: 
      conext:
        required: true
        type: string
jobs:
  terraform_plan: 
    name: Terraform plan ${{ inputs.conext == 'main' && 'prod' || inputs.conext == 'dev' && 'dev' || 'feat' }}
    environment: ${{ inputs.conext == 'main' && 'prod' || inputs.conext == 'dev' && 'dev' || 'feat' }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout RepositÃ³rio
        uses: actions/checkout@v4
        
      - name: verifica o ref_name
        run: echo "${{ inputs.conext }}"

      
      - name: Configurar AWS credentials CLI de Deploy
        uses: aws-actions/configure-aws-credentials@v4.1.0
        with:
          aws-region: ${{ vars.AWS_REGION }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_DEPLOY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_DEPLOY }}

      - name: HashiCorp - Setup Terraform
        uses: hashicorp/setup-terraform@v2.0.3

      - name: Terraform init
        run: |
          terraform init \
           -backend-config="bucket=${{ secrets.BUCKET_NAME_STATE }}" \
           -backend-config="key=${{ vars.STATE_KEY }}" \
           -backend-config="dynamodb_table=${{ vars.DYNAMO_TABLE_LOCK }}"   \
           -backend-config="region=${{ vars.AWS_REGION }}" \
          
      - name: Terraform fmt
        id: fmt
        if: ${{ success() }}
        run: terraform fmt -recursive -check

      - name: Terraform Validate
        id: validate
        if: ${{ success() }}
        run: terraform validate -no-color

      - name: Terraform Plan
        id: plan
        if: ${{ success() }}
        run: |
          export TF_VAR_aws_profile="${{ secrets.AWS_CLUSTER_USER }}"
          export TF_VAR_db_password="${{ secrets.DB_PASSWORD }}"
          export TF_VAR_db_username="${{ secrets.DB_USER }}"
          export TF_VAR_key_name="${{ secrets.EC2_KEY_NAME }}"
          export TF_VAR_principal_arn="${{ secrets.AWS_PRINCIPAL_ARN }}"
          terraform plan -var-file ./env/${{ vars.ENV_DEPLOY }}/${{ vars.ENV_DEPLOY }}.tfvars \
          -no-color -out=tfplan && terraform show -no-color tfplan > plan.txt

      - name: Upload Plan
        id: upload-plan
        if: ${{ success() }}
        uses: actions/upload-artifact@v4
        with:
          name: tfplan-${{ inputs.conext == 'main' && 'prod' || inputs.conext == 'dev' && 'dev' || 'feat' }}
          path: ./plan.txt
          overwrite: true







          

          
          

   
          
